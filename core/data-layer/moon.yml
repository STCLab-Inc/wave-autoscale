language: "rust"
type: "library"
owners:
  defaultOwner: "@wave-autoscale-team"

tasks:
  clear-postgres:
    command: "docker rm -f wapostgres"
    platform: "system"
  prepare-postgres:
    command: "docker run --name wapostgres -p 5432:5432 -e POSTGRES_PASSWORD=postgres -d postgres"
    platform: "system"
  test-nextest:
    command: "cargo nextest run -p data-layer --test-threads=1"
    env:
      # RUST_LOG: data_layer=debug
      RUST_LOG: debug
  test:
    command: "echo 'Done Tests'"
    platform: "system"
    deps:
      - "clear-postgres"
      - "prepare-postgres"
      - "test-nextest"
      - "clear-postgres"
    options:
      runDepsInParallel: false
    env:
      RUST_LOG: data_layer=debug
  test-plan-log:
    command: "cargo test --test data_layer test_plan_log -- --nocapture"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: data_layer=debug
  test-watch:
    command: "cargo test test_run_watch -- --test-threads=1 --nocapture"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: info

  # Migration tasks (https://github.com/launchbadge/sqlx/blob/main/sqlx-cli/README.md)
  add-migration-postgres:
    command: "sqlx"
    args:
      - "migrate"
      - "add"
      - "yaml_column"
      # - "[migration_name]"
      - "--source"
      - "./migrations/postgres"
    inputs:
      - "migrations"

  add-migration-sqlite:
    command: "sqlx"
    args:
      - "migrate"
      - "add"
      - "yaml_column"
      # - "[migration_name]"
      - "--source"
      - "./migrations/sqlite"
    inputs:
      - "migrations"

  # Generate the Typescript types from Rust types
  generate-ts-rs:
    command: "cargo test export_bindings"
    inputs:
      - "@globs(sources)"
      - "@globs(tests)"
    env:
      RUST_LOG: wave_typescript_generator=debug

  build:
    command: "cargo build"
    deps:
      - "test"
    inputs:
      - "@globs(sources)"
