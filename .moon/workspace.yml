# https://moonrepo.dev/docs/config/workspace
$schema: "https://moonrepo.dev/schemas/workspace.json"

# Require a specific version of moon while running commands, otherwise fail.
versionConstraint: ">=1.13.2"

# Extend and inherit an external configuration file. Must be a valid HTTPS URL or file system path.
# extends: './shared/workspace.yml'

# REQUIRED: A map of all projects found within the workspace, or a list or file system globs.
# When using a map, each entry requires a unique project ID as the map key, and a file system
# path to the project folder as the map value. File paths are relative from the workspace root,
# and cannot reference projects located outside the workspace boundary.
projects:
  # Rust based
  controller: "core/wave-autoscale"
  data-layer: "core/data-layer"
  api-server: "core/api-server"
  utils: "core/utils"
  # Node based
  web-app: "core/web-app"
  # For building
  cmd: ".moon/cmd"
  deployment: "deployment"

codeowners:
  syncOnRun: true
  globalPaths:
    # All files
    "*": ["@wave-autoscale-team"]
# Configures the version control system to utilize within the workspace. A VCS
# is required for determining touched (added, modified, etc) files, calculating file hashes,
# computing affected files, and much more.
vcs:
  # The manager/binary to use when managing the repository.
  # Accepts "git", or "svn". Defaults to "git".
  manager: "git"
  provider: "github"
  # The default branch (master/main/trunk) in the repository for comparing the
  # local branch against. For git, this is is typically "master" or "main",
  # and must include the remote prefix (before /). For svn, this should always be "trunk".
  defaultBranch: "main"
  syncHooks: true
  hooks:
    pre-commit:
      - "moon sync projects"
      - "moon run :lint"
    pre-push:
      - "moon sync projects"
      - "moon run :lint"
      - "moon run controller:test"
