kind: Metric
id: wa_sample_metric_aws_lambda_function
collector: wa-generator
enabled: true
metadata:
  pattern: [30, 70, 80, 90, 30]
  gap_seconds: 10
---
kind: ScalingComponent
id: wa_sample_component_aws_lambda_function_provisioned
component_kind: aws-lambda
enabled: true
metadata:
  region: "{{ region }}"
  function_name: wa-sample-lambda
  qualifier: "1"
---
kind: ScalingComponent
id: wa_sample_component_aws_lambda_function_reserved
component_kind: aws-lambda
enabled: true
metadata:
  region: "{{ region }}"
  function_name: wa-sample-lambda
---
kind: ScalingPlan
id: wa_sample_plan_aws_lambda_function
metadata:
  title: Sample Scaling Plan - AWS Lambda Function
  cool_down: 0 # seconds
  interval: 10000 # milliseconds
enabled: true
variables:
  metric: |
    get({
        metric_id: 'wa_sample_metric_aws_lambda_function'
    })
plans:
  - id: lambda-scale-out
    # JavaScript expression that returns a boolean value.
    expression: >
      $metric >= 70
    priority: 2
    cool_down: 30 # seconds
    scaling_components:
      - component_id: wa_sample_component_aws_lambda_function_reserved
        reserved_concurrency: 5
      - component_id: wa_sample_component_aws_lambda_function_provisioned
        provisioned_concurrency: 5
  - id: lambda-scale-in
    # JavaScript expression that returns a boolean value.
    expression: >
      $metric < 70
    priority: 1
    scaling_components:
      - component_id: wa_sample_component_aws_lambda_function_reserved
        reserved_concurrency: 1
      - component_id: wa_sample_component_aws_lambda_function_provisioned
        provisioned_concurrency: 1
